"""
Auto-generated by pipeline_assembler
"""
from dataflow.pipeline import PipelineABC
from dataflow.utils.storage import FileStorage
from dataflow.serving import APILLMServing_request, LocalModelLLMServing_vllm

from dataflow.operators.general_text.filter.rule_based_filter import AlphaWordsFilter, ContentNullFilter, LineEndWithEllipsisFilter, SentenceNumberFilter
from dataflow.operators.general_text.refine.remove_extra_spaces_refiner import RemoveExtraSpacesRefiner
from dataflow.operators.general_text.filter.rule_based_filter import AlphaWordsFilter, ContentNullFilter, LineEndWithEllipsisFilter, SentenceNumberFilter
from dataflow.operators.general_text.refine.remove_extra_spaces_refiner import RemoveExtraSpacesRefiner



class RecommendPipeline(PipelineABC):
    def __init__(self):
        super().__init__()
        # -------- FileStorage --------
        self.storage = FileStorage(
            first_entry_file_name="/tmp/translation_sample_10.jsonl",
            cache_path="./cache_local",
            file_name_prefix="dataflow_cache_step",
            cache_type="jsonl",
        )
        # -------- LLM Serving (Remote) --------
        self.llm_serving = APILLMServing_request(
            api_url="http://123.129.219.111:3000/v1/chat/completions",
            key_name_of_api_key="DF_API_KEY",
            model_name="gpt-4o",
            max_workers=100,
        )

        self.content_null_filter = ContentNullFilter()
        self.line_end_with_ellipsis_filter = LineEndWithEllipsisFilter(threshold=0.3)
        self.sentence_number_filter = SentenceNumberFilter(min_sentences=3, max_sentences=7500)
        self.alpha_words_filter = AlphaWordsFilter(threshold=None, use_tokenizer=None)
        self.remove_extra_spaces_refiner = RemoveExtraSpacesRefiner()

    def forward(self):
        self.content_null_filter.run(
            storage=self.storage.step(), input_key=None, output_key='content_null_filter_label'
        )
        self.line_end_with_ellipsis_filter.run(
            storage=self.storage.step(), input_key=None, output_key='line_end_with_ellipsis_filter_label'
        )
        self.sentence_number_filter.run(
            storage=self.storage.step(), input_key=None, output_key='sentence_number_filter_label'
        )
        self.alpha_words_filter.run(
            storage=self.storage.step(), input_key=None, output_key='alpha_words_filter_label'
        )
        self.remove_extra_spaces_refiner.run(
            storage=self.storage.step(), input_key=None
        )

if __name__ == "__main__":
    pipeline = RecommendPipeline()
    pipeline.compile()
    pipeline.forward()
